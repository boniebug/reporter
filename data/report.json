[{"filePath":"/home/runner/work/reporter/reporter/src/notifySlack.js","messages":[{"ruleId":"no-process-env","severity":2,"message":"Unexpected use of process.env.","line":2,"column":21,"nodeType":"MemberExpression","messageId":"unexpectedProcessEnv","endLine":2,"endColumn":32},{"ruleId":"max-len","severity":2,"message":"This line has a length of 86. Maximum allowed is 80.","line":13,"column":1,"nodeType":"Program","messageId":"max","endLine":13,"endColumn":87}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const axios = require('axios');\nconst WEBHOOK_URL = process.env.SLACK_WEBHOOK;\n\nconst notifySlack = () => {\n  const data = {\n    blocks: [\n      {type: 'section', text: {type: 'mrkdwn', text: 'Hi :wave:'}},\n      {\n        type: 'section',\n        text: {\n          type: 'mrkdwn',\n          text:\n            '*Generated report and deployed at https://boniebug.github.io/reporter *',\n        },\n      },\n      {\n        type: 'section',\n        text: {\n          type: 'mrkdwn',\n          text: `Report generated at *${new Date().toLocaleString()}*`,\n        },\n      },\n    ],\n  };\n  axios.post(WEBHOOK_URL, data);\n};\n\nnotifySlack();\n","usedDeprecatedRules":[{"ruleId":"global-require","replacedBy":[]},{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"no-process-env","replacedBy":[]}]},{"filePath":"/home/runner/work/reporter/reporter/vaishnavi-progress/src/arithmeticOperations.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'add' is assigned a value but never used.","line":1,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":10},{"ruleId":"no-unused-vars","severity":2,"message":"'subtract' is assigned a value but never used.","line":5,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":15},{"ruleId":"no-unused-vars","severity":2,"message":"'multiply' is assigned a value but never used.","line":9,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":15},{"ruleId":"no-unused-vars","severity":2,"message":"'divide' is assigned a value but never used.","line":13,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":13}],"errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const add = function(num1, num2) {\n  return num1 + num2;\n};\n\nconst subtract = function(num1, num2) {\n  return num1 - num2;\n};\n\nconst multiply = function(num1, num2) {\n  return num1 * num2;\n};\n\nconst divide = function(num1, num2) {\n  return num1 / num2;\n};\n","usedDeprecatedRules":[{"ruleId":"global-require","replacedBy":[]},{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"no-process-env","replacedBy":[]}]},{"filePath":"/home/runner/work/reporter/reporter/vaishnavi-progress/src/employees.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'basedOnId' is assigned a value but never used.","line":20,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":20,"endColumn":16},{"ruleId":"no-unused-vars","severity":2,"message":"'sameNameAndProject' is assigned a value but never used.","line":32,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":32,"endColumn":25}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/*\nconst employees = [\n  { id: 1, name: 'David', project: 'Lenovo' }, \n  { id: 2, name: 'Brian', project: 'Lenovo' }, \n  { id: 3, name: 'David', project: 'Android' }\n];\n*/\nconst retrieveDetails = function(employees, basedOn, property) {\n  const target = [];\n\n  for(let index = 0; index < employees.length; index++) {\n    if(basedOn(employees[index], property)) {\n      target.push(employees[index]);\n    }\n  }\n\n  return target;\n};\n\nconst basedOnId = function(employee, id) {\n  return employee.id === id;\n};\n\nconst basedOnName = function(employee, empName) {\n  return employee.name === empName;\n};\n\nconst basedOnProject = function(employee, project) {\n  return employee.project === project;\n};\n\nconst sameNameAndProject = function(employees, empName, project) {\n  const empsInProject = retrieveDetails(employees, basedOnProject, project);\n\n  return retrieveDetails(empsInProject, basedOnName, empName);\n};\n","usedDeprecatedRules":[{"ruleId":"global-require","replacedBy":[]},{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"no-process-env","replacedBy":[]}]},{"filePath":"/home/runner/work/reporter/reporter/vaishnavi-progress/src/equalityOf2dArrays.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'isEqual2d' is assigned a value but never used.","line":13,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":16}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const isEqual1d = function(array1, array2) {\n  let flag = true;\n\n  for(let col = 0; col < array1.length || col < array2.length; col++) {\n    if(array1[col] !== array2[col]) {\n      flag = false;\n    }\n  }\n\n  return flag;\n};\n\nconst isEqual2d = function(array1, array2) {\n  let flag = true;\n\n  for(let row = 0; row < array1.length || row < array2.length; row++) {\n    flag = isEqual1d(array1[row], array2[row]);\n  }\n\n  return flag;\n};\n","usedDeprecatedRules":[{"ruleId":"global-require","replacedBy":[]},{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"no-process-env","replacedBy":[]}]},{"filePath":"/home/runner/work/reporter/reporter/vaishnavi-progress/src/factorial.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'factorial' is assigned a value but never used.","line":1,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":16},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 0.","line":4,"column":12,"nodeType":"Literal","messageId":"noMagic","endLine":4,"endColumn":13},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 1.","line":8,"column":32,"nodeType":"Literal","messageId":"noMagic","endLine":8,"endColumn":33}],"errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const factorial = function(num) {\n  let result = 1;\n\n  if(num < 0) {\n    return;\n  }\n\n  for(let count = num; count > 1; count--) {\n    result *= count;\n  }\n  return result;\n};\n","usedDeprecatedRules":[{"ruleId":"global-require","replacedBy":[]},{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"no-process-env","replacedBy":[]}]},{"filePath":"/home/runner/work/reporter/reporter/vaishnavi-progress/src/fibonacci.js","messages":[{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 1.","line":6,"column":13,"nodeType":"Literal","messageId":"noMagic","endLine":6,"endColumn":14},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 0.","line":7,"column":12,"nodeType":"Literal","messageId":"noMagic","endLine":7,"endColumn":13},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 2.","line":10,"column":36,"nodeType":"Literal","messageId":"noMagic","endLine":10,"endColumn":37},{"ruleId":"no-unused-vars","severity":2,"message":"'fibonacciSeries' is assigned a value but never used.","line":19,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":19,"endColumn":22}],"errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const nthFibonacciNumber = function(num) {\n  let first = 0;\n  let second = 1;\n  let third;\n  \n  if(num <= 1) {\n    return 0;\n  }\n\n  for(let count = 0; count < num - 2; count++) {\n    third = first + second;\n    first = second;\n    second = third;\n  }\n\n  return second;\n};\n\nconst fibonacciSeries = function(num) {\n  const arr = [];\n  for(let count = 1; count <= num; count++) {\n    arr.push(nthFibonacciNumber(count));\n  }\n  return arr;\n};\n","usedDeprecatedRules":[{"ruleId":"global-require","replacedBy":[]},{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"no-process-env","replacedBy":[]}]},{"filePath":"/home/runner/work/reporter/reporter/vaishnavi-progress/src/filterEvensOdds.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'filterEvensOdds' is assigned a value but never used.","line":1,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":22},{"ruleId":"no-unused-vars","severity":2,"message":"'isEven' is assigned a value but never used.","line":13,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":13},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 2.","line":14,"column":19,"nodeType":"Literal","messageId":"noMagic","endLine":14,"endColumn":20},{"ruleId":"eqeqeq","severity":1,"message":"Expected '===' and instead saw '=='.","line":14,"column":21,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":14,"endColumn":23},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 0.","line":14,"column":24,"nodeType":"Literal","messageId":"noMagic","endLine":14,"endColumn":25},{"ruleId":"no-unused-vars","severity":2,"message":"'isOdd' is assigned a value but never used.","line":17,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":17,"endColumn":12},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 2.","line":18,"column":19,"nodeType":"Literal","messageId":"noMagic","endLine":18,"endColumn":20},{"ruleId":"eqeqeq","severity":1,"message":"Expected '!==' and instead saw '!='.","line":18,"column":21,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":18,"endColumn":23},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 0.","line":18,"column":24,"nodeType":"Literal","messageId":"noMagic","endLine":18,"endColumn":25}],"errorCount":7,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const filterEvensOdds = function(numbers, filter) {\n  const filteredNumbers = [];\n  \n  for(let index = 0; index < numbers.length; index++) {\n    if(filter(numbers[index])) {\n      filteredNumbers.push(numbers[index]);\n    }\n  }\n\n  return filteredNumbers;\n};\n\nconst isEven = function(number) {\n  return number % 2 == 0;\n};\n\nconst isOdd = function(number) {\n  return number % 2 != 0;\n};\n","usedDeprecatedRules":[{"ruleId":"global-require","replacedBy":[]},{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"no-process-env","replacedBy":[]}]},{"filePath":"/home/runner/work/reporter/reporter/vaishnavi-progress/src/isEvenOrOdd.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'isEven' is assigned a value but never used.","line":1,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 2.","line":2,"column":19,"nodeType":"Literal","messageId":"noMagic","endLine":2,"endColumn":20},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 0.","line":2,"column":25,"nodeType":"Literal","messageId":"noMagic","endLine":2,"endColumn":26},{"ruleId":"no-unused-vars","severity":2,"message":"'isOdd' is assigned a value but never used.","line":5,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":12},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 2.","line":6,"column":19,"nodeType":"Literal","messageId":"noMagic","endLine":6,"endColumn":20},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 0.","line":6,"column":25,"nodeType":"Literal","messageId":"noMagic","endLine":6,"endColumn":26}],"errorCount":6,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const isEven = function(number) {\n  return number % 2 === 0;\n};\n\nconst isOdd = function(number) {\n  return number % 2 !== 0;\n};\n","usedDeprecatedRules":[{"ruleId":"global-require","replacedBy":[]},{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"no-process-env","replacedBy":[]}]},{"filePath":"/home/runner/work/reporter/reporter/vaishnavi-progress/src/mapFilterReduce.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'map' is assigned a value but never used.","line":1,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":10},{"ruleId":"no-unused-vars","severity":2,"message":"'filter' is assigned a value but never used.","line":11,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":11,"endColumn":13},{"ruleId":"no-unused-vars","severity":2,"message":"'reduce' is assigned a value but never used.","line":23,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":23,"endColumn":13},{"ruleId":"no-unused-vars","severity":2,"message":"'predicate' is assigned a value but never used.","line":33,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":33,"endColumn":16},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 2.","line":34,"column":20,"nodeType":"Literal","messageId":"noMagic","endLine":34,"endColumn":21},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 0.","line":34,"column":26,"nodeType":"Literal","messageId":"noMagic","endLine":34,"endColumn":27},{"ruleId":"no-unused-vars","severity":2,"message":"'reducer' is assigned a value but never used.","line":37,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":37,"endColumn":14},{"ruleId":"eol-last","severity":1,"message":"Newline required at end of file but not found.","line":43,"column":50,"nodeType":"Program","messageId":"missing","fix":{"range":[949,949],"text":"\n"}}],"errorCount":7,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"const map = function(array, mapper) {\n  const result = [];\n\n  for(let index = 0; index < array.length; index++) {\n    result.push(mapper(array[index]));\n  }\n\n  return result;\n};\n\nconst filter = function(array, predicate) {\n  const result = [];\n\n  for(let index = 0; index < array.length; index++) {\n    if(predicate(array[index])) {\n      result.push(array[index]);\n    }\n  }\n\n  return result;\n};\n\nconst reduce = function(array, reducer, initialValue) {\n  let result = initialValue;\n\n  for(let index = 0; index < array.length; index++) {\n    result = reducer(result, array[index]);\n  }\n\n  return result;\n};\n\nconst predicate = function(element) {\n  return element % 2 === 0;\n};\n\nconst reducer = function(accumulator, element) {\n  return accumulator + element;\n};\n\n// console.log(filter([1,2,3,4, undefined, false, 5, NaN], predicate));\n// console.log(map([1,2,3,4,5, undefined, 6, 7, 8], predicate));\n// console.log(reduce([1,2,3,4,5], reducer, 10));","usedDeprecatedRules":[{"ruleId":"global-require","replacedBy":[]},{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"no-process-env","replacedBy":[]}]},{"filePath":"/home/runner/work/reporter/reporter/vaishnavi-progress/src/objectsPractice.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'findWhat' is assigned a value but never used.","line":9,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":15}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/*\nconst collection = {\n  colours: ['blue', 'red', 'green', 'yellow'],\n  animals: ['dog', 'cat', 'pig', 'lion'],\n  vehicles: ['bike', 'car', 'cycle']\n};\n*/\n\nconst findWhat = function(collection, target) {\n  const keys = Object.keys(collection);\n  let category = '';\n  \n  for(let index = 0; index < keys.length; index++) {\n    if(collection[keys[index]].includes(target)) {\n      category = keys[index];\n    }\n  }\n\n  return category;\n};\n","usedDeprecatedRules":[{"ruleId":"global-require","replacedBy":[]},{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"no-process-env","replacedBy":[]}]},{"filePath":"/home/runner/work/reporter/reporter/vaishnavi-progress/src/removeDuplicates.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'removeAdjacentDuplicates' is assigned a value but never used.","line":1,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":31},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 1.","line":5,"column":43,"nodeType":"Literal","messageId":"noMagic","endLine":5,"endColumn":44}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const removeAdjacentDuplicates = function(numbers) {\n  const result = [];\n\n  for(let index = 0; index < numbers.length; index++) {\n    if(numbers[index] !== numbers[index + 1]) {\n      result.push(numbers[index]);\n    }\n  }\n\n  return result;\n};\n","usedDeprecatedRules":[{"ruleId":"global-require","replacedBy":[]},{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"no-process-env","replacedBy":[]}]},{"filePath":"/home/runner/work/reporter/reporter/vaishnavi-progress/src/stringsPractice.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'hasAnyVowel' is assigned a value but never used.","line":1,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":18},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: -1.","line":3,"column":33,"nodeType":"UnaryExpression","messageId":"noMagic","endLine":3,"endColumn":35},{"ruleId":"no-unused-vars","severity":2,"message":"'hasAnyConsonant' is assigned a value but never used.","line":6,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":22},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: -1.","line":8,"column":51,"nodeType":"UnaryExpression","messageId":"noMagic","endLine":8,"endColumn":53},{"ruleId":"no-unused-vars","severity":2,"message":"'hasAllConsonants' is assigned a value but never used.","line":11,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":11,"endColumn":23},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: -1.","line":14,"column":54,"nodeType":"UnaryExpression","messageId":"noMagic","endLine":14,"endColumn":56}],"errorCount":6,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const hasAnyVowel = function(str) {\n  const vowels = /[aeiouAEIOU]/;\n  return str.search(vowels) !== -1;\n};\n\nconst hasAnyConsonant = function(str) {\n  const consonants = /[bcdfghjklmnpqrstvwxyz]/;\n  return str.toLowerCase().search(consonants) !== -1;\n};\n\nconst hasAllConsonants = function(str) {\n  const notConsonants = /[^bcdfghjklmnpqrstvwxyz]/;\n\n  return str.toLowerCase().search(notConsonants) === -1;\n};\n","usedDeprecatedRules":[{"ruleId":"global-require","replacedBy":[]},{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"no-process-env","replacedBy":[]}]},{"filePath":"/home/runner/work/reporter/reporter/vaishnavi-progress/src/students.js","messages":[{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 8.","line":11,"column":28,"nodeType":"Literal","messageId":"noMagic","endLine":11,"endColumn":29},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 9.","line":15,"column":28,"nodeType":"Literal","messageId":"noMagic","endLine":15,"endColumn":29},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 10.","line":19,"column":28,"nodeType":"Literal","messageId":"noMagic","endLine":19,"endColumn":30},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 7.","line":23,"column":24,"nodeType":"Literal","messageId":"noMagic","endLine":23,"endColumn":25},{"ruleId":"no-unused-vars","severity":2,"message":"'studentsOfClass7' is assigned a value but never used.","line":31,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":31,"endColumn":23},{"ruleId":"no-unused-vars","severity":2,"message":"'studentsOfClass8' is assigned a value but never used.","line":35,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":35,"endColumn":23},{"ruleId":"no-unused-vars","severity":2,"message":"'averageOfClass9' is assigned a value but never used.","line":48,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":48,"endColumn":22},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 0.","line":50,"column":56,"nodeType":"Literal","messageId":"noMagic","endLine":50,"endColumn":57},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 8.","line":55,"column":24,"nodeType":"Literal","messageId":"noMagic","endLine":55,"endColumn":25},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 0.","line":59,"column":7,"nodeType":"Literal","messageId":"noMagic","endLine":59,"endColumn":8},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 1.","line":60,"column":7,"nodeType":"Literal","messageId":"noMagic","endLine":60,"endColumn":8},{"ruleId":"no-unused-vars","severity":2,"message":"'averageOfClass8' is assigned a value but never used.","line":65,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":65,"endColumn":22},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 0.","line":66,"column":45,"nodeType":"Literal","messageId":"noMagic","endLine":66,"endColumn":46},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 0.","line":66,"column":48,"nodeType":"Literal","messageId":"noMagic","endLine":66,"endColumn":49},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 1.","line":67,"column":16,"nodeType":"Literal","messageId":"noMagic","endLine":67,"endColumn":17},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 0.","line":67,"column":27,"nodeType":"Literal","messageId":"noMagic","endLine":67,"endColumn":28},{"ruleId":"no-unused-vars","severity":2,"message":"'isAnyFromClass8' is assigned a value but never used.","line":71,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":71,"endColumn":22},{"ruleId":"no-unused-vars","severity":2,"message":"'isAllFromClass10' is assigned a value but never used.","line":76,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":76,"endColumn":23}],"errorCount":18,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/*\nconst students = [\n  { name: 'Henry', class: 9, marks: 400 }, \n  { name: 'John', class: 8, marks: 570 }, \n  { name: 'Misa', class: 8, marks: 550 }, \n  { name: 'David', class: 9, marks: 600 }\n];\n*/\n\nconst isFromClass8 = function(student) {\n  return student.class === 8;\n};\n\nconst isFromClass9 = function(student) {\n  return student.class === 9;\n};\n\nconst isFromClass10 = function(student) {\n  return student.class === 10;\n};\n\nconst isFromClass7 = function(class7, student) {\n  if(student.class === 7) {\n    class7.push(student);\n  }\n\n  return class7;\n};\n\n// Find the Students of class 7 using reduce\nconst studentsOfClass7 = function(students) {\n  return students.reduce(isFromClass7, []);\n};\n\nconst studentsOfClass8 = function(students) {\n  return students.filter(isFromClass8);\n};\n\nconst studentsOfClass9 = function(students) {\n  return students.filter(isFromClass9);\n};\n\nconst sumOfMarks = function(sum, student) {\n  return student.marks + sum;\n};\n\n// Find the Average marks of class 9 using filter and reduce\nconst averageOfClass9 = function(students) {\n  const class9Students = studentsOfClass9(students);\n  const totalMarks = class9Students.reduce(sumOfMarks, 0);\n  return totalMarks / class9Students.length;\n};\n\nconst class8sum = function(sum, student) {\n  if(student.class !== 8) {\n    return sum;\n  }\n\n  sum[0]++;\n  sum[1] += student.marks;\n  return sum;\n};\n\n//Find the Average marks of class 8 using only one reduce\nconst averageOfClass8 = function(students) {\n  const count = students.reduce(class8sum, [0, 0]);\n  return count[1] / count[0];\n};\n\n//Find Is there any student from 8th class\nconst isAnyFromClass8 = function(students) {\n  return students.some(isFromClass8);  \n};\n\n// Find If all the students are from 10th class\nconst isAllFromClass10 = function(students) {\n  return students.every(isFromClass10);\n};\n","usedDeprecatedRules":[{"ruleId":"global-require","replacedBy":[]},{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"no-process-env","replacedBy":[]}]},{"filePath":"/home/runner/work/reporter/reporter/vaishnavi-progress/src/sumOfArray.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'addNumbers' is assigned a value but never used.","line":1,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":17}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const addNumbers = function(array) {\n  let sum = 0;\n\n  for(let index = 0; index < array.length; index++) {\n    sum += array[index];\n  }\n  return sum;\n};\n","usedDeprecatedRules":[{"ruleId":"global-require","replacedBy":[]},{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"no-process-env","replacedBy":[]}]}]
