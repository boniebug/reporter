[{"filePath":"/home/runner/work/reporter/reporter/public/js/index.js","messages":[{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":1,"column":41,"nodeType":"Program","messageId":"expectedCRLF","endLine":2,"endColumn":1,"fix":{"range":[40,41],"text":"\r\n"}},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":2,"column":39,"nodeType":"Literal","messageId":"wrongQuotes","endLine":2,"endColumn":43,"fix":{"range":[79,83],"text":"'h3'"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":2,"column":45,"nodeType":"Program","messageId":"expectedCRLF","endLine":3,"endColumn":1,"fix":{"range":[85,86],"text":"\r\n"}},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":3,"column":20,"nodeType":"Literal","messageId":"wrongQuotes","endLine":3,"endColumn":26,"fix":{"range":[105,111],"text":"'file'"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":3,"column":27,"nodeType":"Program","messageId":"expectedCRLF","endLine":4,"endColumn":1,"fix":{"range":[112,113],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":4,"column":29,"nodeType":"Program","messageId":"expectedCRLF","endLine":5,"endColumn":1,"fix":{"range":[141,142],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":5,"column":15,"nodeType":"Program","messageId":"expectedCRLF","endLine":6,"endColumn":1,"fix":{"range":[156,157],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":6,"column":3,"nodeType":"Program","messageId":"expectedCRLF","endLine":7,"endColumn":1,"fix":{"range":[159,160],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":7,"column":1,"nodeType":"Program","messageId":"expectedCRLF","endLine":8,"endColumn":1,"fix":{"range":[160,161],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":8,"column":29,"nodeType":"Program","messageId":"expectedCRLF","endLine":9,"endColumn":1,"fix":{"range":[189,190],"text":"\r\n"}},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":9,"column":37,"nodeType":"Literal","messageId":"wrongQuotes","endLine":9,"endColumn":41,"fix":{"range":[226,230],"text":"'tr'"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":9,"column":43,"nodeType":"Program","messageId":"expectedCRLF","endLine":10,"endColumn":1,"fix":{"range":[232,233],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":10,"column":20,"nodeType":"Program","messageId":"expectedCRLF","endLine":11,"endColumn":1,"fix":{"range":[252,253],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":11,"column":25,"nodeType":"Program","messageId":"expectedCRLF","endLine":12,"endColumn":1,"fix":{"range":[277,278],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":12,"column":22,"nodeType":"Program","messageId":"expectedCRLF","endLine":13,"endColumn":1,"fix":{"range":[299,300],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":13,"column":21,"nodeType":"Program","messageId":"expectedCRLF","endLine":14,"endColumn":1,"fix":{"range":[320,321],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":14,"column":22,"nodeType":"Program","messageId":"expectedCRLF","endLine":15,"endColumn":1,"fix":{"range":[342,343],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":15,"column":23,"nodeType":"Program","messageId":"expectedCRLF","endLine":16,"endColumn":1,"fix":{"range":[365,366],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":16,"column":1,"nodeType":"Program","messageId":"expectedCRLF","endLine":17,"endColumn":1,"fix":{"range":[366,367],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":17,"column":26,"nodeType":"Program","messageId":"expectedCRLF","endLine":18,"endColumn":1,"fix":{"range":[392,393],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":18,"column":13,"nodeType":"Program","messageId":"expectedCRLF","endLine":19,"endColumn":1,"fix":{"range":[405,406],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":19,"column":3,"nodeType":"Program","messageId":"expectedCRLF","endLine":20,"endColumn":1,"fix":{"range":[408,409],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":20,"column":1,"nodeType":"Program","messageId":"expectedCRLF","endLine":21,"endColumn":1,"fix":{"range":[409,410],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":21,"column":71,"nodeType":"Program","messageId":"expectedCRLF","endLine":22,"endColumn":1,"fix":{"range":[480,481],"text":"\r\n"}},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":22,"column":37,"nodeType":"Literal","messageId":"wrongQuotes","endLine":22,"endColumn":41,"fix":{"range":[517,521],"text":"'tr'"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":22,"column":43,"nodeType":"Program","messageId":"expectedCRLF","endLine":23,"endColumn":1,"fix":{"range":[523,524],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":23,"column":17,"nodeType":"Program","messageId":"expectedCRLF","endLine":24,"endColumn":1,"fix":{"range":[540,541],"text":"\r\n"}},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 1.","line":24,"column":29,"nodeType":"Literal","messageId":"noMagic","endLine":24,"endColumn":30},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":24,"column":33,"nodeType":"Literal","messageId":"wrongQuotes","endLine":24,"endColumn":40,"fix":{"range":[573,580],"text":"'error'"}},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":24,"column":43,"nodeType":"Literal","messageId":"wrongQuotes","endLine":24,"endColumn":52,"fix":{"range":[583,592],"text":"'warning'"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":24,"column":69,"nodeType":"Program","messageId":"expectedCRLF","endLine":25,"endColumn":1,"fix":{"range":[609,610],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":25,"column":25,"nodeType":"Program","messageId":"expectedCRLF","endLine":26,"endColumn":1,"fix":{"range":[634,635],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":26,"column":24,"nodeType":"Program","messageId":"expectedCRLF","endLine":27,"endColumn":1,"fix":{"range":[658,659],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":27,"column":21,"nodeType":"Program","messageId":"expectedCRLF","endLine":28,"endColumn":1,"fix":{"range":[679,680],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":28,"column":23,"nodeType":"Program","messageId":"expectedCRLF","endLine":29,"endColumn":1,"fix":{"range":[702,703],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":29,"column":5,"nodeType":"Program","messageId":"expectedCRLF","endLine":30,"endColumn":1,"fix":{"range":[707,708],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":30,"column":23,"nodeType":"Program","messageId":"expectedCRLF","endLine":31,"endColumn":1,"fix":{"range":[730,731],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":31,"column":13,"nodeType":"Program","messageId":"expectedCRLF","endLine":32,"endColumn":1,"fix":{"range":[743,744],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":32,"column":3,"nodeType":"Program","messageId":"expectedCRLF","endLine":33,"endColumn":1,"fix":{"range":[746,747],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":33,"column":1,"nodeType":"Program","messageId":"expectedCRLF","endLine":34,"endColumn":1,"fix":{"range":[747,748],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":34,"column":37,"nodeType":"Program","messageId":"expectedCRLF","endLine":35,"endColumn":1,"fix":{"range":[784,785],"text":"\r\n"}},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":35,"column":40,"nodeType":"Literal","messageId":"wrongQuotes","endLine":35,"endColumn":47,"fix":{"range":[824,831],"text":"'table'"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":35,"column":49,"nodeType":"Program","messageId":"expectedCRLF","endLine":36,"endColumn":1,"fix":{"range":[833,834],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":36,"column":33,"nodeType":"Program","messageId":"expectedCRLF","endLine":37,"endColumn":1,"fix":{"range":[866,867],"text":"\r\n"}},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":37,"column":21,"nodeType":"Literal","messageId":"wrongQuotes","endLine":37,"endColumn":29,"fix":{"range":[887,895],"text":"'issues'"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":37,"column":30,"nodeType":"Program","messageId":"expectedCRLF","endLine":38,"endColumn":1,"fix":{"range":[896,897],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":38,"column":29,"nodeType":"Program","messageId":"expectedCRLF","endLine":39,"endColumn":1,"fix":{"range":[925,926],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":39,"column":49,"nodeType":"Program","messageId":"expectedCRLF","endLine":40,"endColumn":1,"fix":{"range":[974,975],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":40,"column":34,"nodeType":"Program","messageId":"expectedCRLF","endLine":41,"endColumn":1,"fix":{"range":[1008,1009],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":41,"column":16,"nodeType":"Program","messageId":"expectedCRLF","endLine":42,"endColumn":1,"fix":{"range":[1024,1025],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":42,"column":3,"nodeType":"Program","messageId":"expectedCRLF","endLine":43,"endColumn":1,"fix":{"range":[1027,1028],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":43,"column":1,"nodeType":"Program","messageId":"expectedCRLF","endLine":44,"endColumn":1,"fix":{"range":[1028,1029],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":44,"column":35,"nodeType":"Program","messageId":"expectedCRLF","endLine":45,"endColumn":1,"fix":{"range":[1063,1064],"text":"\r\n"}},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":45,"column":42,"nodeType":"Literal","messageId":"wrongQuotes","endLine":45,"endColumn":52,"fix":{"range":[1105,1115],"text":"'#reports'"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":45,"column":54,"nodeType":"Program","messageId":"expectedCRLF","endLine":46,"endColumn":1,"fix":{"range":[1117,1118],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":46,"column":29,"nodeType":"Program","messageId":"expectedCRLF","endLine":47,"endColumn":1,"fix":{"range":[1146,1147],"text":"\r\n"}},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":47,"column":52,"nodeType":"Literal","messageId":"wrongQuotes","endLine":47,"endColumn":57,"fix":{"range":[1198,1203],"text":"'div'"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":47,"column":59,"nodeType":"Program","messageId":"expectedCRLF","endLine":48,"endColumn":1,"fix":{"range":[1205,1206],"text":"\r\n"}},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":48,"column":33,"nodeType":"Literal","messageId":"wrongQuotes","endLine":48,"endColumn":41,"fix":{"range":[1238,1246],"text":"'report'"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":48,"column":42,"nodeType":"Program","messageId":"expectedCRLF","endLine":49,"endColumn":1,"fix":{"range":[1247,1248],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":49,"column":68,"nodeType":"Program","messageId":"expectedCRLF","endLine":50,"endColumn":1,"fix":{"range":[1315,1316],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":50,"column":66,"nodeType":"Program","messageId":"expectedCRLF","endLine":51,"endColumn":1,"fix":{"range":[1381,1382],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":51,"column":42,"nodeType":"Program","messageId":"expectedCRLF","endLine":52,"endColumn":1,"fix":{"range":[1423,1424],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":52,"column":6,"nodeType":"Program","messageId":"expectedCRLF","endLine":53,"endColumn":1,"fix":{"range":[1429,1430],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":53,"column":3,"nodeType":"Program","messageId":"expectedCRLF","endLine":54,"endColumn":1,"fix":{"range":[1432,1433],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":54,"column":1,"nodeType":"Program","messageId":"expectedCRLF","endLine":55,"endColumn":1,"fix":{"range":[1433,1434],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":55,"column":28,"nodeType":"Program","messageId":"expectedCRLF","endLine":56,"endColumn":1,"fix":{"range":[1461,1462],"text":"\r\n"}},{"ruleId":"quotes","severity":2,"message":"Strings must use singlequote.","line":56,"column":9,"nodeType":"Literal","messageId":"wrongQuotes","endLine":56,"endColumn":27,"fix":{"range":[1470,1488],"text":"'data/report.json'"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":56,"column":28,"nodeType":"Program","messageId":"expectedCRLF","endLine":57,"endColumn":1,"fix":{"range":[1489,1490],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":57,"column":33,"nodeType":"Program","messageId":"expectedCRLF","endLine":58,"endColumn":1,"fix":{"range":[1522,1523],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":58,"column":27,"nodeType":"Program","messageId":"expectedCRLF","endLine":59,"endColumn":1,"fix":{"range":[1549,1550],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":59,"column":3,"nodeType":"Program","messageId":"expectedCRLF","endLine":60,"endColumn":1,"fix":{"range":[1552,1553],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":60,"column":1,"nodeType":"Program","messageId":"expectedCRLF","endLine":61,"endColumn":1,"fix":{"range":[1553,1554],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":61,"column":29,"nodeType":"Program","messageId":"expectedCRLF","endLine":62,"endColumn":1,"fix":{"range":[1582,1583],"text":"\r\n"}}],"errorCount":74,"warningCount":0,"fixableErrorCount":73,"fixableWarningCount":0,"source":"const generateFileName = (filename) => {\n  const file = document.createElement(\"h3\");\n  file.className = \"file\";\n  file.innerText = filename;\n  return file;\n};\n\nconst createHeader = () => {\n  const tr = document.createElement(\"tr\");\n  const headers = `\n    <th>Rule Broken</th>\n    <th>Severity</th>\n    <th>Message</th>\n    <th>Line no.</th>\n    <th>Col no.</th>`;\n\n  tr.innerHTML = headers;\n  return tr;\n};\n\nconst createIssue = ({ ruleId, severity, message, line, column }) => {\n  const tr = document.createElement(\"tr\");\n  const cols = `\n    <td class=\"${severity > 1 ? \"error\" : \"warning\"}\">${ruleId}</td>\n    <td>${severity}</td>\n    <td>${message}</td>\n    <td>${line}</td>\n    <td>${column}</td>\n  `;\n  tr.innerHTML = cols;\n  return tr;\n};\n\nconst generateIssues = (issues) => {\n  const table = document.createElement(\"table\");\n  const header = createHeader();\n  table.className = \"issues\";\n  table.appendChild(header);\n  const issueElements = issues.map(createIssue);\n  table.append(...issueElements);\n  return table;\n};\n\nconst generateReport = (data) => {\n  const reports = document.querySelector(\"#reports\");\n  data.forEach((report) => {\n    const reportContainer = document.createElement(\"div\");\n    reportContainer.className = \"report\";\n    reportContainer.appendChild(generateFileName(report.filePath));\n    reportContainer.appendChild(generateIssues(report.messages));\n    reports.appendChild(reportContainer);\n  });\n};\n\nconst fetchReport = () => {\n  fetch(\"data/report.json\")\n    .then((data) => data.json())\n    .then(generateReport);\n};\n\nwindow.onload = fetchReport;\n","usedDeprecatedRules":[{"ruleId":"global-require","replacedBy":[]},{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"no-process-env","replacedBy":[]}]},{"filePath":"/home/runner/work/reporter/reporter/vaishnavi-progress/test.js","messages":[{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":1,"column":1,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1,"endColumn":12},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":1,"column":65,"nodeType":"Program","messageId":"expectedCRLF","endLine":2,"endColumn":1,"fix":{"range":[64,65],"text":"\r\n"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":65,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[64,64],"text":";"}}],"errorCount":3,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"console.log('Should get an error with severity 2 in the report')\n","usedDeprecatedRules":[{"ruleId":"global-require","replacedBy":[]},{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"no-process-env","replacedBy":[]}]}]
