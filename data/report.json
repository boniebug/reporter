[{"filePath":"/home/runner/work/reporter/reporter/src/notifySlack.js","messages":[{"ruleId":"no-process-env","severity":2,"message":"Unexpected use of process.env.","line":2,"column":21,"nodeType":"MemberExpression","messageId":"unexpectedProcessEnv","endLine":2,"endColumn":32},{"ruleId":"max-len","severity":2,"message":"This line has a length of 86. Maximum allowed is 80.","line":13,"column":1,"nodeType":"Program","messageId":"max","endLine":13,"endColumn":87}],"errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const axios = require('axios');\nconst WEBHOOK_URL = process.env.SLACK_WEBHOOK;\n\nconst notifySlack = () => {\n  const data = {\n    blocks: [\n      {type: 'section', text: {type: 'mrkdwn', text: 'Hi :wave:'}},\n      {\n        type: 'section',\n        text: {\n          type: 'mrkdwn',\n          text:\n            '*Generated report and deployed at https://boniebug.github.io/reporter *',\n        },\n      },\n      {\n        type: 'section',\n        text: {\n          type: 'mrkdwn',\n          text: `Report generated at *${new Date().toLocaleString()}*`,\n        },\n      },\n    ],\n  };\n  axios.post(WEBHOOK_URL, data);\n};\n\nnotifySlack();\n","usedDeprecatedRules":[{"ruleId":"global-require","replacedBy":[]},{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"no-process-env","replacedBy":[]}]},{"filePath":"/home/runner/work/reporter/reporter/vaishnavi-progress/src/arithmeticOperations.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'add' is assigned a value but never used.","line":1,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":10},{"ruleId":"no-unused-vars","severity":2,"message":"'subtract' is assigned a value but never used.","line":5,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":15},{"ruleId":"no-unused-vars","severity":2,"message":"'multiply' is assigned a value but never used.","line":9,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":15},{"ruleId":"no-unused-vars","severity":2,"message":"'divide' is assigned a value but never used.","line":13,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":13}],"errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const add = function(num1, num2) {\n  return num1 + num2;\n};\n\nconst subtract = function(num1, num2) {\n  return num1 - num2;\n};\n\nconst multiply = function(num1, num2) {\n  return num1 * num2;\n};\n\nconst divide = function(num1, num2) {\n  return num1 / num2;\n};\n","usedDeprecatedRules":[{"ruleId":"global-require","replacedBy":[]},{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"no-process-env","replacedBy":[]}]},{"filePath":"/home/runner/work/reporter/reporter/vaishnavi-progress/src/equalityOf2dArrays.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'isEqual2d' is assigned a value but never used.","line":13,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":16}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const isEqual1d = function(array1, array2) {\n  let flag = true;\n\n  for(let col = 0; col < array1.length || col < array2.length; col++) {\n    if(array1[col] !== array2[col]) {\n      flag = false;\n    }\n  }\n\n  return flag;\n};\n\nconst isEqual2d = function(array1, array2) {\n  let flag = true;\n\n  for(let row = 0; row < array1.length || row < array2.length; row++) {\n    flag = isEqual1d(array1[row], array2[row]);\n  }\n\n  return flag;\n};\n","usedDeprecatedRules":[{"ruleId":"global-require","replacedBy":[]},{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"no-process-env","replacedBy":[]}]},{"filePath":"/home/runner/work/reporter/reporter/vaishnavi-progress/src/factorial.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'factorial' is assigned a value but never used.","line":1,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":16},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 0.","line":4,"column":12,"nodeType":"Literal","messageId":"noMagic","endLine":4,"endColumn":13},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 1.","line":8,"column":32,"nodeType":"Literal","messageId":"noMagic","endLine":8,"endColumn":33}],"errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const factorial = function(num) {\n  let result = 1;\n\n  if(num < 0) {\n    return;\n  }\n\n  for(let count = num; count > 1; count--) {\n    result *= count;\n  }\n  return result;\n};\n","usedDeprecatedRules":[{"ruleId":"global-require","replacedBy":[]},{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"no-process-env","replacedBy":[]}]},{"filePath":"/home/runner/work/reporter/reporter/vaishnavi-progress/src/fibonacci.js","messages":[{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 1.","line":6,"column":13,"nodeType":"Literal","messageId":"noMagic","endLine":6,"endColumn":14},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 0.","line":7,"column":12,"nodeType":"Literal","messageId":"noMagic","endLine":7,"endColumn":13},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 2.","line":10,"column":36,"nodeType":"Literal","messageId":"noMagic","endLine":10,"endColumn":37},{"ruleId":"no-unused-vars","severity":2,"message":"'fibonacciSeries' is assigned a value but never used.","line":19,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":19,"endColumn":22}],"errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const nthFibonacciNumber = function(num) {\n  let first = 0;\n  let second = 1;\n  let third;\n  \n  if(num <= 1) {\n    return 0;\n  }\n\n  for(let count = 0; count < num - 2; count++) {\n    third = first + second;\n    first = second;\n    second = third;\n  }\n\n  return second;\n};\n\nconst fibonacciSeries = function(num) {\n  const arr = [];\n  for(let count = 1; count <= num; count++) {\n    arr.push(nthFibonacciNumber(count));\n  }\n  return arr;\n};\n","usedDeprecatedRules":[{"ruleId":"global-require","replacedBy":[]},{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"no-process-env","replacedBy":[]}]},{"filePath":"/home/runner/work/reporter/reporter/vaishnavi-progress/src/filterEvensOdds.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'filterEvenNumbers' is assigned a value but never used.","line":1,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":24},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 2.","line":5,"column":23,"nodeType":"Literal","messageId":"noMagic","endLine":5,"endColumn":24},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 0.","line":5,"column":29,"nodeType":"Literal","messageId":"noMagic","endLine":5,"endColumn":30},{"ruleId":"no-unused-vars","severity":2,"message":"'filterOddNumbers' is assigned a value but never used.","line":13,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":23},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 2.","line":17,"column":23,"nodeType":"Literal","messageId":"noMagic","endLine":17,"endColumn":24},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 0.","line":17,"column":29,"nodeType":"Literal","messageId":"noMagic","endLine":17,"endColumn":30}],"errorCount":6,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const filterEvenNumbers = function(array) {\n  const evenArray = [];\n  \n  for(let index = 0; index < array.length; index++) {\n    if(array[index] % 2 === 0) {\n      evenArray.push(array[index]);\n    }\n  }\n\n  return evenArray;\n};\n\nconst filterOddNumbers = function(array) {\n  const oddArray = [];\n  \n  for(let index = 0; index < array.length; index++) {\n    if(array[index] % 2 !== 0) {\n      oddArray.push(array[index]);\n    }\n  }\n\n  return oddArray;\n};\n","usedDeprecatedRules":[{"ruleId":"global-require","replacedBy":[]},{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"no-process-env","replacedBy":[]}]},{"filePath":"/home/runner/work/reporter/reporter/vaishnavi-progress/src/isEvenOrOdd.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'isEven' is assigned a value but never used.","line":1,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 2.","line":2,"column":19,"nodeType":"Literal","messageId":"noMagic","endLine":2,"endColumn":20},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 0.","line":2,"column":25,"nodeType":"Literal","messageId":"noMagic","endLine":2,"endColumn":26},{"ruleId":"no-unused-vars","severity":2,"message":"'isOdd' is assigned a value but never used.","line":5,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":12},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 2.","line":6,"column":19,"nodeType":"Literal","messageId":"noMagic","endLine":6,"endColumn":20},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 0.","line":6,"column":25,"nodeType":"Literal","messageId":"noMagic","endLine":6,"endColumn":26}],"errorCount":6,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const isEven = function(number) {\n  return number % 2 === 0;\n};\n\nconst isOdd = function(number) {\n  return number % 2 !== 0;\n};\n","usedDeprecatedRules":[{"ruleId":"global-require","replacedBy":[]},{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"no-process-env","replacedBy":[]}]},{"filePath":"/home/runner/work/reporter/reporter/vaishnavi-progress/src/sumOfArray.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'addNumbers' is assigned a value but never used.","line":1,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":17}],"errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const addNumbers = function(array) {\n  let sum = 0;\n\n  for(let index = 0; index < array.length; index++) {\n    sum += array[index];\n  }\n  return sum;\n};\n","usedDeprecatedRules":[{"ruleId":"global-require","replacedBy":[]},{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"no-process-env","replacedBy":[]}]}]
