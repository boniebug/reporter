[{"filePath":"/home/runner/work/reporter/reporter/vaishnavi-progress/arithmeticOperations.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'add' is assigned a value but never used.","line":1,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":10},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":1,"column":35,"nodeType":"Program","messageId":"expectedCRLF","endLine":2,"endColumn":1,"fix":{"range":[34,35],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":2,"column":22,"nodeType":"Program","messageId":"expectedCRLF","endLine":3,"endColumn":1,"fix":{"range":[56,57],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":3,"column":3,"nodeType":"Program","messageId":"expectedCRLF","endLine":4,"endColumn":1,"fix":{"range":[59,60],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":4,"column":1,"nodeType":"Program","messageId":"expectedCRLF","endLine":5,"endColumn":1,"fix":{"range":[60,61],"text":"\r\n"}},{"ruleId":"no-unused-vars","severity":2,"message":"'subtract' is assigned a value but never used.","line":5,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":15},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":5,"column":40,"nodeType":"Program","messageId":"expectedCRLF","endLine":6,"endColumn":1,"fix":{"range":[100,101],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":6,"column":22,"nodeType":"Program","messageId":"expectedCRLF","endLine":7,"endColumn":1,"fix":{"range":[122,123],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":7,"column":3,"nodeType":"Program","messageId":"expectedCRLF","endLine":8,"endColumn":1,"fix":{"range":[125,126],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":8,"column":1,"nodeType":"Program","messageId":"expectedCRLF","endLine":9,"endColumn":1,"fix":{"range":[126,127],"text":"\r\n"}},{"ruleId":"no-unused-vars","severity":2,"message":"'multiply' is assigned a value but never used.","line":9,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":15},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":9,"column":40,"nodeType":"Program","messageId":"expectedCRLF","endLine":10,"endColumn":1,"fix":{"range":[166,167],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":10,"column":22,"nodeType":"Program","messageId":"expectedCRLF","endLine":11,"endColumn":1,"fix":{"range":[188,189],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":11,"column":3,"nodeType":"Program","messageId":"expectedCRLF","endLine":12,"endColumn":1,"fix":{"range":[191,192],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":12,"column":1,"nodeType":"Program","messageId":"expectedCRLF","endLine":13,"endColumn":1,"fix":{"range":[192,193],"text":"\r\n"}},{"ruleId":"no-unused-vars","severity":2,"message":"'divide' is assigned a value but never used.","line":13,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":13},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":13,"column":38,"nodeType":"Program","messageId":"expectedCRLF","endLine":14,"endColumn":1,"fix":{"range":[230,231],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":14,"column":22,"nodeType":"Program","messageId":"expectedCRLF","endLine":15,"endColumn":1,"fix":{"range":[252,253],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":15,"column":3,"nodeType":"Program","messageId":"expectedCRLF","endLine":16,"endColumn":1,"fix":{"range":[255,256],"text":"\r\n"}}],"errorCount":19,"warningCount":0,"fixableErrorCount":15,"fixableWarningCount":0,"source":"const add = function(num1, num2) {\n  return num1 + num2;\n};\n\nconst subtract = function(num1, num2) {\n  return num1 - num2;\n};\n\nconst multiply = function(num1, num2) {\n  return num1 * num2;\n};\n\nconst divide = function(num1, num2) {\n  return num1 / num2;\n};\n","usedDeprecatedRules":[{"ruleId":"global-require","replacedBy":[]},{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"no-process-env","replacedBy":[]}]},{"filePath":"/home/runner/work/reporter/reporter/vaishnavi-progress/factorial.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'factorial' is assigned a value but never used.","line":1,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":16},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":1,"column":34,"nodeType":"Program","messageId":"expectedCRLF","endLine":2,"endColumn":1,"fix":{"range":[33,34],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":2,"column":18,"nodeType":"Program","messageId":"expectedCRLF","endLine":3,"endColumn":1,"fix":{"range":[51,52],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":3,"column":1,"nodeType":"Program","messageId":"expectedCRLF","endLine":4,"endColumn":1,"fix":{"range":[52,53],"text":"\r\n"}},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 0.","line":4,"column":12,"nodeType":"Literal","messageId":"noMagic","endLine":4,"endColumn":13},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":4,"column":16,"nodeType":"Program","messageId":"expectedCRLF","endLine":5,"endColumn":1,"fix":{"range":[68,69],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":5,"column":12,"nodeType":"Program","messageId":"expectedCRLF","endLine":6,"endColumn":1,"fix":{"range":[80,81],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":6,"column":4,"nodeType":"Program","messageId":"expectedCRLF","endLine":7,"endColumn":1,"fix":{"range":[84,85],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":7,"column":1,"nodeType":"Program","messageId":"expectedCRLF","endLine":8,"endColumn":1,"fix":{"range":[85,86],"text":"\r\n"}},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 1.","line":8,"column":32,"nodeType":"Literal","messageId":"noMagic","endLine":8,"endColumn":33},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":8,"column":45,"nodeType":"Program","messageId":"expectedCRLF","endLine":9,"endColumn":1,"fix":{"range":[130,131],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":9,"column":21,"nodeType":"Program","messageId":"expectedCRLF","endLine":10,"endColumn":1,"fix":{"range":[151,152],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":10,"column":4,"nodeType":"Program","messageId":"expectedCRLF","endLine":11,"endColumn":1,"fix":{"range":[155,156],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":11,"column":17,"nodeType":"Program","messageId":"expectedCRLF","endLine":12,"endColumn":1,"fix":{"range":[172,173],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":12,"column":3,"nodeType":"Program","messageId":"expectedCRLF","endLine":13,"endColumn":1,"fix":{"range":[175,176],"text":"\r\n"}}],"errorCount":15,"warningCount":0,"fixableErrorCount":12,"fixableWarningCount":0,"source":"const factorial = function(num) {\n  let result = 1;\n\n  if(num < 0) {\n    return;\n  }\n\n  for(let count = num; count > 1; count--) {\n    result *= count;\n  }\n  return result;\n};\n","usedDeprecatedRules":[{"ruleId":"global-require","replacedBy":[]},{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"no-process-env","replacedBy":[]}]},{"filePath":"/home/runner/work/reporter/reporter/vaishnavi-progress/fibonacci.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'fibonacciNumber' is assigned a value but never used.","line":1,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":22},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":1,"column":40,"nodeType":"Program","messageId":"expectedCRLF","endLine":2,"endColumn":1,"fix":{"range":[39,40],"text":"\r\n"}},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 1.","line":2,"column":13,"nodeType":"Literal","messageId":"noMagic","endLine":2,"endColumn":14},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":2,"column":17,"nodeType":"Program","messageId":"expectedCRLF","endLine":3,"endColumn":1,"fix":{"range":[56,57],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":3,"column":16,"nodeType":"Program","messageId":"expectedCRLF","endLine":4,"endColumn":1,"fix":{"range":[72,73],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":4,"column":4,"nodeType":"Program","messageId":"expectedCRLF","endLine":5,"endColumn":1,"fix":{"range":[76,77],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":5,"column":1,"nodeType":"Program","messageId":"expectedCRLF","endLine":6,"endColumn":1,"fix":{"range":[77,78],"text":"\r\n"}},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 1.","line":6,"column":32,"nodeType":"Literal","messageId":"noMagic","endLine":6,"endColumn":33},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 2.","line":6,"column":59,"nodeType":"Literal","messageId":"noMagic","endLine":6,"endColumn":60},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":6,"column":62,"nodeType":"Program","messageId":"expectedCRLF","endLine":7,"endColumn":1,"fix":{"range":[139,140],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":7,"column":3,"nodeType":"Program","messageId":"expectedCRLF","endLine":8,"endColumn":1,"fix":{"range":[142,143],"text":"\r\n"}}],"errorCount":11,"warningCount":0,"fixableErrorCount":7,"fixableWarningCount":0,"source":"const fibonacciNumber = function(num) {\n  if(num <= 1) {\n    return num;\n  }\n\n  return fibonacciNumber(num - 1) + fibonacciNumber(num - 2);\n};\n","usedDeprecatedRules":[{"ruleId":"global-require","replacedBy":[]},{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"no-process-env","replacedBy":[]}]},{"filePath":"/home/runner/work/reporter/reporter/vaishnavi-progress/isEvenOrOdd.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'isEven' is assigned a value but never used.","line":1,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":1,"column":34,"nodeType":"Program","messageId":"expectedCRLF","endLine":2,"endColumn":1,"fix":{"range":[33,34],"text":"\r\n"}},{"ruleId":"no-extra-parens","severity":2,"message":"Unnecessary parentheses around expression.","line":2,"column":10,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":2,"endColumn":11,"fix":{"range":[43,60],"text":"number % 2 == 0"}},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 2.","line":2,"column":20,"nodeType":"Literal","messageId":"noMagic","endLine":2,"endColumn":21},{"ruleId":"eqeqeq","severity":1,"message":"Expected '===' and instead saw '=='.","line":2,"column":22,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":2,"endColumn":24},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 0.","line":2,"column":25,"nodeType":"Literal","messageId":"noMagic","endLine":2,"endColumn":26},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":2,"column":28,"nodeType":"Program","messageId":"expectedCRLF","endLine":3,"endColumn":1,"fix":{"range":[61,62],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":3,"column":3,"nodeType":"Program","messageId":"expectedCRLF","endLine":4,"endColumn":1,"fix":{"range":[64,65],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":4,"column":1,"nodeType":"Program","messageId":"expectedCRLF","endLine":5,"endColumn":1,"fix":{"range":[65,66],"text":"\r\n"}},{"ruleId":"no-unused-vars","severity":2,"message":"'isOdd' is assigned a value but never used.","line":5,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":12},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":5,"column":33,"nodeType":"Program","messageId":"expectedCRLF","endLine":6,"endColumn":1,"fix":{"range":[98,99],"text":"\r\n"}},{"ruleId":"no-extra-parens","severity":2,"message":"Unnecessary parentheses around expression.","line":6,"column":10,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":6,"endColumn":11,"fix":{"range":[108,125],"text":"number % 2 != 0"}},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 2.","line":6,"column":20,"nodeType":"Literal","messageId":"noMagic","endLine":6,"endColumn":21},{"ruleId":"eqeqeq","severity":1,"message":"Expected '!==' and instead saw '!='.","line":6,"column":22,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":6,"endColumn":24},{"ruleId":"no-magic-numbers","severity":2,"message":"No magic number: 0.","line":6,"column":25,"nodeType":"Literal","messageId":"noMagic","endLine":6,"endColumn":26},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":6,"column":28,"nodeType":"Program","messageId":"expectedCRLF","endLine":7,"endColumn":1,"fix":{"range":[126,127],"text":"\r\n"}},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":7,"column":3,"nodeType":"Program","messageId":"expectedCRLF","endLine":8,"endColumn":1,"fix":{"range":[129,130],"text":"\r\n"}}],"errorCount":15,"warningCount":2,"fixableErrorCount":9,"fixableWarningCount":0,"source":"const isEven = function(number) {\n  return (number % 2 == 0);\n};\n\nconst isOdd = function(number) {\n  return (number % 2 != 0);\n};\n","usedDeprecatedRules":[{"ruleId":"global-require","replacedBy":[]},{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"no-process-env","replacedBy":[]}]},{"filePath":"/home/runner/work/reporter/reporter/vaishnavi-progress/test.js","messages":[{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":1,"column":1,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1,"endColumn":12},{"ruleId":"linebreak-style","severity":2,"message":"Expected linebreaks to be 'CRLF' but found 'LF'.","line":1,"column":65,"nodeType":"Program","messageId":"expectedCRLF","endLine":2,"endColumn":1,"fix":{"range":[64,65],"text":"\r\n"}},{"ruleId":"semi","severity":2,"message":"Missing semicolon.","line":1,"column":65,"nodeType":"ExpressionStatement","messageId":"missingSemi","endLine":2,"endColumn":1,"fix":{"range":[64,64],"text":";"}}],"errorCount":3,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"console.log('Should get an error with severity 2 in the report')\n","usedDeprecatedRules":[{"ruleId":"global-require","replacedBy":[]},{"ruleId":"handle-callback-err","replacedBy":[]},{"ruleId":"no-process-exit","replacedBy":[]},{"ruleId":"no-process-env","replacedBy":[]}]}]
